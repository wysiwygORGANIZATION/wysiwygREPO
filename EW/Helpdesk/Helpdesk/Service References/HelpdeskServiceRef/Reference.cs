//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Helpdesk.HelpdeskServiceRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HelpdeskMusic", Namespace="http://schemas.datacontract.org/2004/07/iRadioDEIplaylist")]
    [System.SerializableAttribute()]
    public partial class HelpdeskMusic : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlbumNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArtistNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenreNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MusicDurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MusicIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MusicNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlbumName {
            get {
                return this.AlbumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AlbumNameField, value) != true)) {
                    this.AlbumNameField = value;
                    this.RaisePropertyChanged("AlbumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArtistName {
            get {
                return this.ArtistNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtistNameField, value) != true)) {
                    this.ArtistNameField = value;
                    this.RaisePropertyChanged("ArtistName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GenreName {
            get {
                return this.GenreNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GenreNameField, value) != true)) {
                    this.GenreNameField = value;
                    this.RaisePropertyChanged("GenreName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MusicDuration {
            get {
                return this.MusicDurationField;
            }
            set {
                if ((this.MusicDurationField.Equals(value) != true)) {
                    this.MusicDurationField = value;
                    this.RaisePropertyChanged("MusicDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MusicId {
            get {
                return this.MusicIdField;
            }
            set {
                if ((this.MusicIdField.Equals(value) != true)) {
                    this.MusicIdField = value;
                    this.RaisePropertyChanged("MusicId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MusicName {
            get {
                return this.MusicNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MusicNameField, value) != true)) {
                    this.MusicNameField = value;
                    this.RaisePropertyChanged("MusicName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HelpdeskServiceRef.IHelpdeskWS")]
    public interface IHelpdeskWS {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHelpdeskWS/MusicsRequest", ReplyAction="http://tempuri.org/IHelpdeskWS/MusicsRequestResponse")]
        Helpdesk.HelpdeskServiceRef.HelpdeskMusic[] MusicsRequest();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHelpdeskWS/MusicsRequest", ReplyAction="http://tempuri.org/IHelpdeskWS/MusicsRequestResponse")]
        System.Threading.Tasks.Task<Helpdesk.HelpdeskServiceRef.HelpdeskMusic[]> MusicsRequestAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHelpdeskWS/AddPlaylist", ReplyAction="http://tempuri.org/IHelpdeskWS/AddPlaylistResponse")]
        void AddPlaylist(Helpdesk.HelpdeskServiceRef.HelpdeskMusic[] hmusics);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHelpdeskWS/AddPlaylist", ReplyAction="http://tempuri.org/IHelpdeskWS/AddPlaylistResponse")]
        System.Threading.Tasks.Task AddPlaylistAsync(Helpdesk.HelpdeskServiceRef.HelpdeskMusic[] hmusics);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHelpdeskWSChannel : Helpdesk.HelpdeskServiceRef.IHelpdeskWS, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HelpdeskWSClient : System.ServiceModel.ClientBase<Helpdesk.HelpdeskServiceRef.IHelpdeskWS>, Helpdesk.HelpdeskServiceRef.IHelpdeskWS {
        
        public HelpdeskWSClient() {
        }
        
        public HelpdeskWSClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HelpdeskWSClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HelpdeskWSClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HelpdeskWSClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Helpdesk.HelpdeskServiceRef.HelpdeskMusic[] MusicsRequest() {
            return base.Channel.MusicsRequest();
        }
        
        public System.Threading.Tasks.Task<Helpdesk.HelpdeskServiceRef.HelpdeskMusic[]> MusicsRequestAsync() {
            return base.Channel.MusicsRequestAsync();
        }
        
        public void AddPlaylist(Helpdesk.HelpdeskServiceRef.HelpdeskMusic[] hmusics) {
            base.Channel.AddPlaylist(hmusics);
        }
        
        public System.Threading.Tasks.Task AddPlaylistAsync(Helpdesk.HelpdeskServiceRef.HelpdeskMusic[] hmusics) {
            return base.Channel.AddPlaylistAsync(hmusics);
        }
    }
}
